#!/bin/bash

set -e 

usage() {
    cat<<EOF
Usage: ec2-ssh [-k KEY] [-s SECRET] [-r REGION] <instance-name>

Open an ssh connection to an EC2 instance where tag:Name=<instance-name>
For list of instance, run ec2-host without any paramteres

-k, KEY       Amazon EC2 Key, defaults to \$AWS_ACCESS_KEY_ID
-s, SECRET    Amazon EC2 Secret, defaults to \$AWS_SECRET_ACCESS_KEY
EOF
}

# Print usage message and exit if no arguments are given
test $# -eq 0 && { usage; exit; }

# Process options
cmd="ec2-host"
while getopts ":hk:s:r:" opt; do
    case $opt in
        h  ) usage; exit 1;;
        k  ) cmd="$cmd -k$OPTARG";;
        s  ) cmd="$cmd -s$OPTARG";;
        r  ) cmd="$cmd -r$OPTARG";;
        \? ) usage; exit 1
    esac
done
shift $((OPTIND - 1))

# support user@instance-name format
IFS="@"; declare -a hostparts=($1) 

inst="${hostparts[1]}"
user="${hostparts[0]}"

if [ -z "$inst" ]; then
  inst="$1"
  user="ubuntu"
fi

# get host from ec2-host command
host=$(exec sh -c "$cmd $inst")

# pass all other parameters (${@:2}) to ssh allowing
# things like: ec2-ssh nginx uptime
test -n "$host" && exec sh -c "ssh $user@$host ${@:2}"